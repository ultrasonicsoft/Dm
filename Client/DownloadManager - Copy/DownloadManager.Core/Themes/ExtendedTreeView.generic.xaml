<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:Ultrasonic.DownloadManager.Controls"
    xmlns:conv="clr-namespace:Ultrasonic.DownloadManager.Core.Converters"
    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    
    <conv:BooleanConverter x:Key="BooleanConverter" />
    
    <Style x:Key="{ComponentResourceKey local:ComboView, LeafSelectionTreeViewItemStyle}"
           TargetType="{x:Type local:ExtendedTreeViewItem}">
        <Setter Property="AllowSelection" Value="{Binding RelativeSource={RelativeSource Self}, Path=HasItems, Converter={StaticResource BooleanConverter}}" />
    </Style>
    <Style x:Key="{ComponentResourceKey local:ComboView, RootExpandedLeafSelectionTreeViewItemStyle}"
           TargetType="{x:Type local:ExtendedTreeViewItem}"
           BasedOn="{StaticResource {ComponentResourceKey local:ComboView, LeafSelectionTreeViewItemStyle}}">
        <Setter Property="IsExpanded" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneTime, Path=IsRoot}" />
    </Style>
    <Style x:Key="{ComponentResourceKey local:ComboView, AllExpandedLeafSelectionTreeViewItemStyle}"
           TargetType="{x:Type local:ExtendedTreeViewItem}"
           BasedOn="{StaticResource {ComponentResourceKey local:ComboView, LeafSelectionTreeViewItemStyle}}">
        <Setter Property="IsExpanded" Value="True" />
    </Style>
    
    <Style x:Key="{ComponentResourceKey local:ComboView, RootExpandedTreeViewItemStyle}"
           TargetType="{x:Type local:ExtendedTreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneTime, Path=IsRoot}" />
    </Style>
    <Style x:Key="{ComponentResourceKey local:ComboView, AllExpandedTreeViewItemStyle}"
           TargetType="{x:Type local:ExtendedTreeViewItem}">
        <Setter Property="IsExpanded" Value="True" />
    </Style>
    
    <Style TargetType="{x:Type local:ExtendedTreeViewItem}"
           BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="ShowCheckBox" Value="{Binding RelativeSource={RelativeSource Self}, Path=TreeViewParent.EnableCheckBoxView}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExtendedTreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="CheckBoxContainer" Width="Auto" />
                            <ColumnDefinition x:Name="ExpanderContainer" Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        
                        <CheckBox Name="ItemCheckBox" Visibility="Collapsed"
                                  Focusable="False"
                                  Margin="0,0,2,0"
                                  HorizontalAlignment="Right" VerticalAlignment="Center"
                                  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=IsChecked}"
                                  Height="12" Width="12" />
                        
                        <ToggleButton Grid.Column="1"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                                      ClickMode="Press"
                                      Margin="2,0,0,0"
                                      Focusable="False" Height="16" Width="16"
                                      VerticalAlignment="Center"
                                      Name="Expander">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border Padding="0,5,1,5"
                                                        Background="#00FFFFFF"
                                                        Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                    <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                        <Path.Data>
                                                            <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                        </Path.Data>
                                                        <Path.RenderTransform>
                                                            <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                        <Setter Property="Shape.Stroke" TargetName="ExpandPath" Value="#FF1BBBFA" />
                                                        <Setter Property="Shape.Fill" TargetName="ExpandPath" Value="#00FFFFFF" />
                                                    </Trigger>
                                                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                        <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Fill" TargetName="ExpandPath" Value="#FF595959" />
                                                        <Setter Property="Shape.Stroke" TargetName="ExpandPath" Value="#FF262626" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        
                        <Border Grid.Column="2"
                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                Padding="{TemplateBinding Control.Padding}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                Background="{TemplateBinding Panel.Background}"
                                VerticalAlignment="Center"
                                Name="Bd"
                                SnapsToDevicePixels="True">
                            <ContentPresenter
                                ContentSource="Header"
                                Name="PART_Header"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>

                        <local:Reveal Grid.Row="1"
                                  Grid.Column="2"
                                  Grid.ColumnSpan="2"
                                  HorizontalAlignment="Left" 
                                  VerticalAlignment="Top" 
                                  VerticalReveal="FromBottomToTop" 
                                  IsExpanded="{TemplateBinding IsItemExpanded}">
                            <ItemsPresenter Name="ItemsHost" />
                        </local:Reveal>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowCheckBoxSpace" Value="True">
                            <Setter TargetName="CheckBoxContainer" Property="MinWidth" Value="17" />
                        </Trigger>
                        <Trigger Property="ShowCheckBox" Value="True">
                            <Setter TargetName="ItemCheckBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems" Value="False" >
                            <Setter Property="UIElement.Visibility" TargetName="Expander" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="TreeViewItem.IsSelected" Value="True">
                            <Setter Property="Panel.Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsExpanderVisible" Value="False">
                            <Setter TargetName="ExpanderContainer" Property="MinWidth" Value="2" />
                            <Setter TargetName="Expander" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
